"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const database_1 = require("./database");
const db = new database_1.Database();
// Sample data –ë–ï–ó –∑–æ–±—Ä–∞–∂–µ–Ω—å
const sampleProducts = [
    {
        name: "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S24",
        price: 25000,
        description: "–ù–∞–π–Ω–æ–≤—ñ—à–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Samsung –∑ –≤—ñ–¥–º—ñ–Ω–Ω–æ—é –∫–∞–º–µ—Ä–æ—é —Ç–∞ –ø–æ—Ç—É–∂–Ω–∏–º –ø—Ä–æ—Ü–µ—Å–æ—Ä–æ–º",
        category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        stock: 25,
    },
    {
        name: "–ù–∞–≤—É—à–Ω–∏–∫–∏ Sony WH-1000XM5",
        price: 8500,
        description: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ –∞–∫—Ç–∏–≤–Ω–∏–º —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è–º",
        category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        stock: 30,
    },
    {
        name: "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ Delonghi Magnifica",
        price: 15000,
        description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∫–æ—Ñ–µ–≤–∞—Ä–∫–∞ –∑ –≤–±—É–¥–æ–≤–∞–Ω–æ—é –∫–∞–≤–æ–º–æ–ª–∫–æ—é",
        category: "–ü–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞",
        stock: 10,
    },
    {
        name: "–ü–∏–ª–æ—Å–æ—Å Dyson V15 Detect",
        price: 18000,
        description: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤–∏–π –ø–∏–ª–æ—Å–æ—Å –∑ –ª–∞–∑–µ—Ä–Ω–∏–º –¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–º –ø–∏–ª—É",
        category: "–ü–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞",
        stock: 8,
    },
    {
        name: "–§—É—Ç–±–æ–ª–∫–∞ Nike Dri-FIT",
        price: 1200,
        description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ –∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é –≤—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –≤–æ–ª–æ–≥–∏",
        category: "–û–¥—è–≥",
        stock: 50,
    },
    {
        name: '–ö–Ω–∏–≥–∞ "–ß–∏—Å—Ç–∏–π –∫–æ–¥"',
        price: 800,
        description: "–ü–æ—Å—ñ–±–Ω–∏–∫ –∑ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è —è–∫—ñ—Å–Ω–æ–≥–æ –∫–æ–¥—É –≤—ñ–¥ –†–æ–±–µ—Ä—Ç–∞ –ú–∞—Ä—Ç—ñ–Ω–∞",
        category: "–ö–Ω–∏–≥–∏",
        stock: 15,
    },
    {
        name: "–ì–∞–Ω—Ç–µ–ª—ñ 2x5–∫–≥",
        price: 2500,
        description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –≥–∞–Ω—Ç–µ–ª—ñ –¥–ª—è –¥–æ–º–∞—à–Ω—ñ—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å",
        category: "–°–ø–æ—Ä—Ç",
        stock: 20,
    },
    {
        name: "–ù–æ—É—Ç–±—É–∫ ASUS ROG",
        price: 45000,
        description: "–Ü–≥—Ä–æ–≤–∏–π –Ω–æ—É—Ç–±—É–∫ –∑ –≤—ñ–¥–µ–æ–∫–∞—Ä—Ç–æ—é RTX 4060",
        category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        stock: 5,
    },
    {
        name: "–ü–ª–∞–Ω—à–µ—Ç iPad Air",
        price: 22000,
        description: '–ü–ª–∞–Ω—à–µ—Ç Apple –∑ —á—ñ–ø–æ–º M1 —Ç–∞ –¥–∏—Å–ø–ª–µ—î–º 10.9"',
        category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        stock: 12,
    },
    {
        name: "–ú—ñ–∫—Ä–æ—Ö–≤–∏–ª—å–æ–≤–∞ –ø—ñ—á LG",
        price: 3500,
        description: "–ú—ñ–∫—Ä–æ—Ö–≤–∏–ª—å–æ–≤–∞ –ø—ñ—á –∑ –≥—Ä–∏–ª–µ–º, 25 –ª",
        category: "–ü–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞",
        stock: 18,
    },
    {
        name: "–ö—Ä–æ—Å—ñ–≤–∫–∏ Adidas Ultraboost",
        price: 4200,
        description: "–°–ø–æ—Ä—Ç–∏–≤–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ –¥–ª—è –±—ñ–≥—É –∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é Boost",
        category: "–û–¥—è–≥",
        stock: 35,
    },
    {
        name: '–ö–Ω–∏–≥–∞ "JavaScript: –ø–æ–≤–Ω–∏–π –¥–æ–≤—ñ–¥–Ω–∏–∫"',
        price: 1200,
        description: "–ü–æ–≤–Ω–∏–π –¥–æ–≤—ñ–¥–Ω–∏–∫ –∑ JavaScript –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è",
        category: "–ö–Ω–∏–≥–∏",
        stock: 8,
    },
];
async function initializeDatabase() {
    try {
        console.log("üöÄ Initializing database with sample data...");
        // –°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
        await db.initTables();
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î —Ç–æ–≤–∞—Ä–∏ –≤ –ë–î
        const existingProducts = await db.getAllProducts();
        if (existingProducts.length > 0) {
            console.log(`‚ö†Ô∏è  Database already contains ${existingProducts.length} products. Skipping initialization.`);
            console.log("To reinitialize, delete the shop.db file and run this command again.");
            return;
        }
        // –î–æ–¥–∞—î–º–æ —Ç–æ–≤–∞—Ä–∏
        for (const product of sampleProducts) {
            await db.createProduct(product);
            console.log(`‚úÖ Added product: ${product.name}`);
        }
        console.log("\nüéâ Database initialized successfully!");
        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const stats = await db.getProductStats();
        console.log("\nüìä Database Stats:");
        console.log(`üì¶ Total Products: ${stats.totalProducts}`);
        console.log(`üí∞ Total Value: ${stats.totalValue.toFixed(2)} –≥—Ä–Ω`);
        console.log(`üìä Average Price: ${stats.averagePrice.toFixed(2)} –≥—Ä–Ω`);
        console.log(`üìã Total Stock: ${stats.totalStock}`);
        console.log("\nüè∑Ô∏è Categories:");
        Object.entries(stats.categories).forEach(([category, count]) => {
            console.log(`   ${category}: ${count} products`);
        });
    }
    catch (error) {
        console.error("‚ùå Error initializing database:", error);
    }
    finally {
        db.close();
    }
}
initializeDatabase();
//# sourceMappingURL=init-db.js.map